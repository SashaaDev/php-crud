openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'http://localhost:85/api'
    description: local

# securitySchemes:
#   BearerToken:
#     type: http
#     scheme: bearer
#     bearerFormat: JWT
paths:

  /users/register:
    post:
      tags:
        - Registration
      summary: Registered user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "email"
                - "password"
                - "role"
                - "participant_id"
              properties:
                email:
                  type: string
                  example: example123email@gmail.com
                password:
                  type: string
                  example: examplePassword123#$%
                role:
                  type: string
                  enum:
                    - candidate
                    - recruiter
                participant_id:
                  type: integer
                  example: 123
      responses:
        '201':
          description: Successful Registered user
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_verify_token:
                    type: string
                    example: 6f2669ab33a4c6ba290c9a10744be9ad
                  access_token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0Ojg1L2FwaS91c2Vycy9yZWdpc3RlciIsImlhdCI6MTcwNzEzNDY4OSwiZXhwIjoxNzA3MTM4Mjg5LCJuYmYiOjE3MDcxMzQ2ODksImp0aSI6IkFCbDJ6TFBvMTNQVFdEU08iLCJzdWIiOiI1NTMiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3IiwiaWQiOjU1Mywicm9sZSI6WyJjYW5kaWRhdGUiXSwicGFydGljaXBhbnRfaWQiOjF9.oopcPonUfNtadTXGz4WDc4VZe_7HcfUzGvjxDmGZpT5
                  token_type:
                    type: string
                    example: bearer
                  expires_in:
                    type: number
                    example: 3600
  /users/passwords/restore:
    put:
      tags:
        - "Restore Password"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "email"
              properties:
                email:
                  type: string
                  example: example123email@gmail.com
      summary: Returns (send) new email verify token
      responses:
        '200':
          description: Successful renew email verify token
          content:
            application/json:
              schema:
                type: object
                properties:
                    verify_token:
                      type: string
                      example: 362a70555cc4cb0ff222b28584bed04e
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
                example: "User with kghgjgjh233g33fwwwg23f55@gmail.com does`nt exist"

  /users/passwords/{emailVerifyToken}/change:
    patch:
      tags:
        - "Restore Password"
      parameters:
        - in: path
          name: emailVerifyToken
          required: true
          schema:
            type: string
            example: f258fad5618612b3bc550673161c2ef4
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - "password"
              properties:
                password:
                  type: string
                  example: examplePassword123#$%
      responses:
        '204':
          description: No content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: string
                example: "Verify token not found"
