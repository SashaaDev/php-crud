openapi: 3.0.0
info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9
servers:
  - url: http://localhost/api
    description: localhost
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /auth/login:
    post:
      summary: User login.
      description: Authenticate user and get access token.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"

      responses:
        "200":
          description: The user has successfully logged in in system.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLoginResult"
        "401":
          description: Unauthorized.

  /auth/registartion:
    put:
      summary: "Registration user"
      description: "This endpoint can registrate user in system."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistrationRequest"

      responses:
        "200":
          description: Successful created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRegistrationResult"
        "404":
          description: There is no such user.

        "422":
          description: Incorrect entering data.
          content:
            application/json:
              schema:
                type: object
              examples:
                EmailIsNotValid:
                  $ref: "#/components/examples/EmailIsNotValid"
                EmailAlreadyUse:
                  $ref: "#/components/examples/EmailAlreadyUse"
                EmailIsRequired:
                  $ref: "#/components/examples/EmailIsRequired"
                NameMinLength:
                  $ref: "#/components/examples/NameMinLength"
                NameMaxLength:
                  $ref: "#/components/examples/NameMaxLength"
                NameIsRequired:
                  $ref: "#/components/examples/NameIsRequired"
                NameNumAndLetter:
                  $ref: "#/components/examples/NameMinLength"
                PasswordIsRequired:
                  $ref: "#/components/examples/PasswordIsRequired"
                PasswordIsString:
                  $ref: "#/components/examples/PasswordIsString"
                PasswordMinLength:
                  $ref: "#/components/examples/PasswordMinLength"
  /auth/send/{email}:
    get:
      summary: Invite using email
      description: Here, a hash is generated for the user who created the email in the system.
      parameters: 
        - $ref: "#/components/parameters/emailParam" 
      responses:
        "200":
          description: Hash generated successfully.
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/HashUpdate"
        "404":
          description: There is no such user.
components:
  parameters:
    emailParam:
      in: path
      name: email
      schema:
        type: string
        example: UserFirst2@gmail.com
      required: true
  schemas:
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
          example: UserFirst7@gmail.com
        password:
          type: string
          example: 12345679
    UserLoginResult:
      type: object
      properties:
        access_token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vMTI3LjAuMC4xL2FwaS9hdXRoL2xvZ2luIiwiaWF0IjoxNzEwMzM3MTcyLCJleHAiOjE3MTAzNDA3NzIsIm5iZiI6MTcxMDMzNzE3MiwianRpIjoiNGxNbzliWWZNSEM3OFAzdyIsInN1YiI6IjIiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.68xTPLpGxSsQRdrGvVB_wS5YhM3WDuSSzn5ZhRdSA8A
        token_type:
          type: string
          example: bearer
        expires_in:
          type: integer
          format: int32
          example: 3600

    UserRegistrationRequest:
      type: object
      properties:
        name:
          type: string
          example: User2
        email:
          type: string
          example: UserFirst5@gmail.com
        password:
          type: string
          example: 123456789

    UserRegistrationResult:
      type: object
      properties:
        name:
          type: string
          example: User2
        email:
          type: string
          example: UserFirst5@gmail.com
        hash:
          type: string
          format: nullable
        updated_at:
          type: string
          example: 2024-03-13T13:28:57.000000Z
        created_at:
          type: string
          example: 2024-03-13T13:28:57.000000Z
        id:
          type: integer
          format: int32
          example: 8
    HashUpdate:
      type: object
      properties:
        id: 
          type: integer
          format: int32
          example: 1
        name: 
          type: string
          example: User1
        email: 
          type: string
          example: UserFirst1@gmail.com
        email_verified_at: 
          type: string
          format: nullable
        hash: 
          type: string
          example: $2y$12$9uAEOFt.RY1Z7oy6tOujbOT/zcqn7y4PDyph5ME9wnf6qMWwiht0G
        created_at: 
          type: string
          example: 2024-03-13T10:30:04.000000Z
        updated_at: 
          type: string
          example: 2024-03-13T14:14:56.000000Z

  examples:
    NameMinLength:
      value:
        message: "The name field must be at least 2 characters."
        error:
          text: "The name field must be at least 2 characters."
    NameNumAndLetter:
      value:
        message: "The name field must only contain letters and numbers."
        error:
          text: "The name field must only contain letters and numbers."
    NameMaxLength:
      value:
        message: "The name field must not exceed 20 characters."
        error:
          text: "The name field must not exceed 20 characters."
    NameIsRequired:
      value:
        message: "The password field is required."
        error:
          text: "The password field is required."
    EmailAlreadyUse:
      value:
        message: "The email address is already in use."
        error:
          text: "The email address is already in use."
    EmailIsNotValid:
      value:
        message: "Please enter a valid email address."
        error:
          text: "Please enter a valid email address."
    EmailIsRequired:
      value:
        message: "The email field is required."
        error:
          text: "The email field is required."
    PasswordMinLength:
      value:
        message: "The password must be at least 8 characters long."
        error:
          text: "The password must be at least 8 characters long."
    PasswordIsString:
      value:
        message: "The password field must be a string."
        error:
          text: "The password field must be a string."
    PasswordIsRequired:
      value:
        message: "The password field is required."
        error:
          text: "The password field is required."
